	(variable=MyVisitor.this(0) [java](0),heap=new MyVisitor()(2) [@l32,c28](2))
	(variable=Tree.left(144) [@l52,c5](144),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.left(144) [@l52,c5](144),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.RecPrint.if_@l309,c9.GetLeft$call@l310,c45(80) [@l310,c45](80),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.RecPrint.if_@l309,c9.GetLeft$call@l310,c45(80) [@l310,c45](80),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.SetLeft.ln(136) [@l87,c28](136),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.SetLeft.ln(136) [@l87,c28](136),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.RemoveRight.while_@l246,c9.GetRight$call@l247,c59(120) [@l247,c59](120),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.RemoveRight.while_@l246,c9.GetRight$call@l247,c59(120) [@l247,c59](120),heap=new Tree()(3) [@l146,c30](3))
	(variable=MyVisitor.visit.if_@l359,c9.GetRight$call@l360,c27(4) [@l360,c27](4),heap=new Tree()(1) [@l19,c26](1))
	(variable=MyVisitor.visit.if_@l359,c9.GetRight$call@l360,c27(4) [@l360,c27](4),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.Search.while_@l278,c9.if_@l280,c13.if_@l285,c17.if_@l286,c21.GetRight$call@l287,c61(132) [@l287,c61](132),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.Search.while_@l278,c9.if_@l280,c13.if_@l285,c17.if_@l286,c21.GetRight$call@l287,c61(132) [@l287,c61](132),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.Insert.while_@l150,c9.if_@l152,c13.if_@l153,c17.GetLeft$call@l154,c56(68) [@l154,c56](68),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.Insert.while_@l150,c9.if_@l152,c13.if_@l153,c17.GetLeft$call@l154,c56(68) [@l154,c56](68),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.RecPrint.node(84) [@l306,c29](84),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.RecPrint.node(84) [@l306,c29](84),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.Delete.while_@l188,c9.if_@l190,c13.if_@l197,c17.if_@l198,c21.GetRight$call@l200,c61(52) [@l200,c61](52),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.Delete.while_@l188,c9.if_@l190,c13.if_@l197,c17.if_@l198,c21.GetRight$call@l200,c61(52) [@l200,c61](52),heap=new Tree()(3) [@l146,c30](3))
	(variable=Visitor.visit.if_@l343,c9.GetLeft$call@l344,c26(156) [@l344,c26](156),heap=new Tree()(1) [@l19,c26](1))
	(variable=Visitor.visit.if_@l343,c9.GetLeft$call@l344,c26(156) [@l344,c26](156),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.Insert.current_node(60) [@l142,c14](60),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.Insert.current_node(60) [@l142,c14](60),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.Search.current_node(124) [@l270,c14](124),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.Search.current_node(124) [@l270,c14](124),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.Search.while_@l278,c9.if_@l280,c13.if_@l281,c17.GetLeft$call@l282,c56(130) [@l282,c56](130),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.Search.while_@l278,c9.if_@l280,c13.if_@l281,c17.GetLeft$call@l282,c56(130) [@l282,c56](130),heap=new Tree()(3) [@l146,c30](3))
	(variable=TV.Start.v(34) [@l17,c19](34),heap=new MyVisitor()(2) [@l32,c28](2))
	(variable=Tree.right(146) [@l53,c5](146),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.right(146) [@l53,c5](146),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.RecPrint.if_@l313,c9.GetRight$call@l314,c46(82) [@l314,c46](82),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.RecPrint.if_@l313,c9.GetRight$call@l314,c46(82) [@l314,c46](82),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.Delete.while_@l188,c9.if_@l190,c13.if_@l191,c17.GetLeft$call@l193,c56(50) [@l193,c56](50),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.Delete.while_@l188,c9.if_@l190,c13.if_@l191,c17.GetLeft$call@l193,c56(50) [@l193,c56](50),heap=new Tree()(3) [@l146,c30](3))
	(variable=Visitor.visit.if_@l338,c9.GetRight$call@l339,c27(154) [@l339,c27](154),heap=new Tree()(1) [@l19,c26](1))
	(variable=Visitor.visit.if_@l338,c9.GetRight$call@l339,c27(154) [@l339,c27](154),heap=new Tree()(3) [@l146,c30](3))
	(variable=MyVisitor.visit.if_@l359,c9.r(6) [tmp_var](6),heap=new Tree()(1) [@l19,c26](1))
	(variable=MyVisitor.visit.if_@l359,c9.r(6) [tmp_var](6),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.Remove.p_node(102) [@l219,c27](102),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.Remove.p_node(102) [@l219,c27](102),heap=new Tree()(3) [@l146,c30](3))
	(variable=Visitor.r(150) [@l333,c5](150),heap=new Tree()(1) [@l19,c26](1))
	(variable=Visitor.r(150) [@l333,c5](150),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.Delete.parent_node(46) [@l176,c14](46),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.Delete.parent_node(46) [@l176,c14](46),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.RemoveLeft.while_@l258,c9.GetLeft$call@l259,c58(110) [@l259,c58](110),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.RemoveLeft.while_@l258,c9.GetLeft$call@l259,c58(110) [@l259,c58](110),heap=new Tree()(3) [@l146,c30](3))
	(variable=Visitor.visit.n(158) [@l335,c22](158),heap=new Tree()(1) [@l19,c26](1))
	(variable=Visitor.visit.n(158) [@l335,c22](158),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.Insert.new_node(62) [@l140,c14](62),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.Insert.new_node(62) [@l140,c14](62),heap=new Tree()(3) [@l146,c30](3))
	(variable=TV.Start.root(33) [@l14,c14](33),heap=new Tree()(1) [@l19,c26](1))
	(variable=TV.Start.root(33) [@l14,c14](33),heap=new Tree()(3) [@l146,c30](3))
	(variable=MyVisitor.visit.if_@l366,c9.l(9) [tmp_var](9),heap=new Tree()(1) [@l19,c26](1))
	(variable=MyVisitor.visit.if_@l366,c9.l(9) [tmp_var](9),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.SetRight.rn(137) [@l82,c29](137),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.SetRight.rn(137) [@l82,c29](137),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.Delete.current_node(41) [@l175,c14](41),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.Delete.current_node(41) [@l175,c14](41),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.RemoveLeft.c_node(105) [@l256,c42](105),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.RemoveLeft.c_node(105) [@l256,c42](105),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.Remove.c_node(89) [@l219,c38](89),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.Remove.c_node(89) [@l219,c38](89),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.RemoveRight.while_@l246,c9.GetRight$call@l249,c37(121) [@l249,c37](121),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.RemoveRight.while_@l246,c9.GetRight$call@l249,c37(121) [@l249,c37](121),heap=new Tree()(3) [@l146,c30](3))
	(variable=Visitor.l(149) [@l332,c5](149),heap=new Tree()(1) [@l19,c26](1))
	(variable=Visitor.l(149) [@l332,c5](149),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.RemoveRight.p_node(117) [@l244,c32](117),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.RemoveRight.p_node(117) [@l244,c32](117),heap=new Tree()(3) [@l146,c30](3))
	(variable=TV.this(35) [java](35),heap=new TV()(0) [@l7,c42](0))
	(variable=Tree.this(147) [java](147),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.this(147) [java](147),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.RemoveRight.c_node(115) [@l244,c43](115),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.RemoveRight.c_node(115) [@l244,c43](115),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.accept.v(139) [@l319,c23](139),heap=new MyVisitor()(2) [@l32,c28](2))
	(variable=Tree.Print.current_node(75) [@l299,c14](75),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.Print.current_node(75) [@l299,c14](75),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.RemoveLeft.p_node(107) [@l256,c31](107),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.RemoveLeft.p_node(107) [@l256,c31](107),heap=new Tree()(3) [@l146,c30](3))
	(variable=MyVisitor.visit.if_@l366,c9.GetLeft$call@l367,c26(7) [@l367,c26](7),heap=new Tree()(1) [@l19,c26](1))
	(variable=MyVisitor.visit.if_@l366,c9.GetLeft$call@l367,c26(7) [@l367,c26](7),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.Insert.while_@l150,c9.if_@l152,c13.if_@l162,c17.GetRight$call@l163,c57(71) [@l163,c57](71),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.Insert.while_@l150,c9.if_@l152,c13.if_@l162,c17.GetRight$call@l163,c57(71) [@l163,c57](71),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.RemoveLeft.while_@l258,c9.GetLeft$call@l261,c36(111) [@l261,c36](111),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.RemoveLeft.while_@l258,c9.GetLeft$call@l261,c36(111) [@l261,c36](111),heap=new Tree()(3) [@l146,c30](3))
	(variable=Tree.Remove.if_@l224,c9.if_@l227,c13.GetLeft$call@l231,c52(95) [@l231,c52](95),heap=new Tree()(1) [@l19,c26](1))
	(variable=Tree.Remove.if_@l224,c9.if_@l227,c13.GetLeft$call@l231,c52(95) [@l231,c52](95),heap=new Tree()(3) [@l146,c30](3))
